{
  "data": {
    "attributes": [
      {
        "name": "order_id",
        "description": "The order ID of the service",
        "modifier": "rw",
        "type": "int",
        "default_value": null,
        "default_value_set": false,
        "validation_type": null,
        "validation_parameters": null
      },
      {
        "name": "service_mtu",
        "description": "the MTU that must be configured at the service provider. The constraints on this value are:\n- cannot be higher than the network MTU of 9100\n- the selected CSP and IX should support the MTU",
        "modifier": "rw",
        "type": "int",
        "default_value": null,
        "default_value_set": false,
        "validation_type": "pydantic.conint",
        "validation_parameters": { "ge": 1500, "le": 1500 }
      },
      {
        "name": "service_bandwidth",
        "description": "the requested service bandwidth. This value is expressed in kilobit per second.",
        "modifier": "rw+",
        "type": "int",
        "default_value": null,
        "default_value_set": false,
        "validation_type": "pydantic.conint",
        "validation_parameters": { "ge": 1, "le": 1000000 }
      },
      {
        "name": "protection_scheme",
        "description": "Protection scheme of service. Possible values: [CC_UNPROTECTED|CC_PROTECTED|CC_DVR_CSP]",
        "modifier": "rw",
        "type": "string",
        "default_value": null,
        "default_value_set": false,
        "validation_type": "pydantic.constr",
        "validation_parameters": {
          "regex": "^(CC_UNPROTECTED|CC_PROTECTED|CC_DVR_CSP)$",
          "strict": true
        }
      },
      {
        "name": "allocated_attributes_storage",
        "description": null,
        "modifier": "r",
        "type": "dict?",
        "default_value": null,
        "default_value_set": false,
        "validation_type": null,
        "validation_parameters": null
      },
      {
        "name": "customer",
        "description": "A string that identifies the customer in the following format: <country in ISO3> / <operator>.\nFor example: BEL/INMANT. The full string is 10 chars long.",
        "modifier": "rw",
        "type": "string",
        "default_value": null,
        "default_value_set": false,
        "validation_type": "pydantic.constr",
        "validation_parameters": {
          "regex": "^[A-Z]{3}\\/[A-Z]{2,6}$",
          "strict": true
        }
      },
      {
        "name": "end_customer",
        "description": "A freeform string provided by the customer. This string is max 50 characters and only contains\nalphanumeric characters.",
        "modifier": "rw",
        "type": "string",
        "default_value": null,
        "default_value_set": false,
        "validation_type": "pydantic.constr",
        "validation_parameters": {
          "regex": "^[a-zA-Z0-9]{0,50}$",
          "strict": true
        }
      }
    ],
    "embedded_entities": [
      {
        "attributes": [
          {
            "name": "service_id",
            "description": "a 9- or 7-digit number that uniquely identifies the service instance. Also referred to as codif.",
            "modifier": "rw",
            "type": "int",
            "default_value": null,
            "default_value_set": false,
            "validation_type": "pydantic.conint",
            "validation_parameters": { "ge": 1000000, "le": 9999999999 }
          }
        ],
        "embedded_entities": [
          {
            "attributes": [
              {
                "name": "vc_id",
                "description": "The circuit id used in the network. This id needs to be unique network wide. This vc_id is requested from\nSirius. This parameter is an integer in the 1..2147483647 range.",
                "modifier": "rw",
                "type": "number?",
                "default_value": null,
                "default_value_set": false,
                "validation_type": null,
                "validation_parameters": null
              }
            ],
            "embedded_entities": [],
            "name": "allocated",
            "description": "Circuit allocated attributes",
            "modifier": "r",
            "lower_limit": 1,
            "upper_limit": 1
          },
          {
            "attributes": [
              {
                "name": "ipx_access",
                "description": "IPX access id, this value is to identify the port. The format of this key is the same as the Circuit.service_id (codif).",
                "modifier": "rw",
                "type": "int",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.conint",
                "validation_parameters": { "ge": 1000000, "le": 9999999999 }
              },
              {
                "name": "outer_vlan",
                "description": "The outer VLAN that is used at the IPX access for this service.",
                "modifier": "rw",
                "type": "int",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.conint",
                "validation_parameters": { "ge": 0, "lt": 4096 }
              },
              {
                "name": "inner_vlan",
                "description": "The inner VLAN that is used at the IPX access for this service. This parameter is\nonly valid and mandatory if the encapsulation type is QinQ.",
                "modifier": "rw",
                "type": "int?",
                "default_value": null,
                "default_value_set": true,
                "validation_type": "pydantic.conint?",
                "validation_parameters": { "ge": 0, "lt": 4096 }
              },
              {
                "name": "encapsulation",
                "description": "The encapsulation type. Valid values are dot1Q and QinQ. When QinQ is specified,\na valid value for outer_vlan and inner_vlan is mandatory. For dot1 only outer_vlan is expected.",
                "modifier": "rw",
                "type": "string",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.constr",
                "validation_parameters": {
                  "regex": "^(qinq|dot1q|)$",
                  "strict": true
                }
              }
            ],
            "embedded_entities": [
              {
                "attributes": [
                  {
                    "name": "router_name",
                    "description": "The name of the router.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "router_system_ip",
                    "description": "The system ip of the router.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "ipaddress.IPv4Address?",
                    "validation_parameters": null
                  },
                  {
                    "name": "router_mgmt_ip",
                    "description": "The managment IP of the router at the customer side of the service for netconf.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "ipaddress.IPv4Address?",
                    "validation_parameters": null
                  },
                  {
                    "name": "router_vendor",
                    "description": "The vendor of the router. This is required to determine the correct parameters in the MPLS domain.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.constr?",
                    "validation_parameters": {
                      "regex": "^(Nokia|Alcatel-Lucent|)$",
                      "strict": true
                    }
                  },
                  {
                    "name": "router_chassis",
                    "description": "The chassis type of the router. This is also required to correctly\ndetermine the parameters in the MPLS domain.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "router_port",
                    "description": "The port on the router",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "tunnel_side",
                    "description": "The side of the tunnel (A or B)",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.constr?",
                    "validation_parameters": {
                      "regex": "^(A|B|)$",
                      "strict": true
                    }
                  }
                ],
                "embedded_entities": [],
                "name": "allocated",
                "description": "Allocated attributes for customer endpoint ",
                "modifier": "r",
                "lower_limit": 1,
                "upper_limit": 1
              }
            ],
            "name": "customer_endpoint",
            "description": "Attributes for customer endpoint which are provided through the NB API",
            "modifier": "rw",
            "lower_limit": 1,
            "upper_limit": 1
          },
          {
            "attributes": [
              {
                "name": "ipx_access",
                "description": "A list of NNI that provide connectivity to the CSP/Region provided in cloud_service_provider\nand csp_region. The list needs to contain at least one element. The values in the list have\nthe same type as service_id (codif).",
                "modifier": "rw",
                "type": "int[]",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.conint[]",
                "validation_parameters": { "ge": 1000000, "le": 9999999999 }
              },
              {
                "name": "cloud_service_provider",
                "description": "The CSP to connect to. Valid values are: Google, AWS, Azure_ECX, null.",
                "modifier": "rw",
                "type": "string",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.constr",
                "validation_parameters": {
                  "regex": "^(AWS|Azure_ECX|Google|null)$",
                  "strict": true
                }
              },
              {
                "name": "region",
                "description": "The CSP region to connect to.",
                "modifier": "rw",
                "type": "string",
                "default_value": null,
                "default_value_set": false,
                "validation_type": "pydantic.constr",
                "validation_parameters": {
                  "regex": "^[a-zA-Z0-9\\-_]*$",
                  "strict": true
                }
              },
              {
                "name": "attributes",
                "description": "A dictionary with attributes specific for the selected CSP. For example, aws also requires\nthe aws account id. The validation of these attributes depends on the selected CSP. The current\nversion requires the dict to have alphanumeric with _ keys and string values that are printable\nascii chars. The values might be further constrained by each of the CSP implementations.",
                "modifier": "rw",
                "type": "dict",
                "default_value": null,
                "default_value_set": false,
                "validation_type": null,
                "validation_parameters": null
              }
            ],
            "embedded_entities": [
              {
                "attributes": [
                  {
                    "name": "encapsulation",
                    "description": "The encapsulation type. Valid values are dot1Q and QinQ. When QinQ is specified,\na valid value for outer_vlan and inner_vlan is mandatory. For dot1 only outer_vlan is expected.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.constr?",
                    "validation_parameters": {
                      "regex": "^(qinq|dot1q|)$",
                      "strict": true
                    }
                  },
                  {
                    "name": "ipx_access",
                    "description": "Allocated IPX access value from ipx_access list",
                    "modifier": "rw",
                    "type": "int?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.conint?",
                    "validation_parameters": { "ge": 1000000, "le": 9999999999 }
                  },
                  {
                    "name": "attributes",
                    "description": "Dictionary for common allocated attributes for CSP",
                    "modifier": "rw",
                    "type": "dict?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "outer_vlan",
                    "description": "The outer VLAN that is used at the IPX access for this service.",
                    "modifier": "rw",
                    "type": "int?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.conint?",
                    "validation_parameters": { "ge": 0, "lt": 4096 }
                  },
                  {
                    "name": "inner_vlan",
                    "description": "The inner VLAN that is used at the IPX access for this service. This parameter is\nonly valid and mandatory if the encapsulation type is QinQ.",
                    "modifier": "rw",
                    "type": "int?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.conint?",
                    "validation_parameters": { "ge": 0, "lt": 4096 }
                  },
                  {
                    "name": "router_name",
                    "description": "The name of the router.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "router_system_ip",
                    "description": "The system ip of the router.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "ipaddress.IPv4Address?",
                    "validation_parameters": null
                  },
                  {
                    "name": "router_mgmt_ip",
                    "description": "The managment IP of the router at the customer side of the service for netconf.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "ipaddress.IPv4Address?",
                    "validation_parameters": null
                  },
                  {
                    "name": "router_vendor",
                    "description": "The vendor of the router. This is required to determine the correct parameters in the MPLS domain.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.constr?",
                    "validation_parameters": {
                      "regex": "^(Nokia|Alcatel-Lucent|)$",
                      "strict": true
                    }
                  },
                  {
                    "name": "router_chassis",
                    "description": "The chassis type of the router. This is also required to correctly\ndetermine the parameters in the MPLS domain.",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "router_port",
                    "description": "The port on the router",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": null,
                    "validation_parameters": null
                  },
                  {
                    "name": "tunnel_side",
                    "description": "The side of the tunnel (A or B)",
                    "modifier": "rw",
                    "type": "string?",
                    "default_value": null,
                    "default_value_set": false,
                    "validation_type": "pydantic.constr?",
                    "validation_parameters": {
                      "regex": "^(A|B|)$",
                      "strict": true
                    }
                  }
                ],
                "embedded_entities": [],
                "name": "allocated",
                "description": "Allocated attributes for CSP endpoint",
                "modifier": "r",
                "lower_limit": 1,
                "upper_limit": 1
              }
            ],
            "name": "csp_endpoint",
            "description": "Attributes for CSP endpoint which are provided through the NB API",
            "modifier": "rw",
            "lower_limit": 1,
            "upper_limit": 1
          }
        ],
        "name": "circuits",
        "description": "Circuit attributes ",
        "modifier": "rw+",
        "lower_limit": 1,
        "upper_limit": 4
      }
    ],
    "environment": "80a8d40c-0323-4305-822d-d377ada8ce04",
    "name": "cloudconnectv2",
    "description": "CloudConnect service API v2",
    "lifecycle": {
      "states": [
        {
          "name": "allocating",
          "label": "info",
          "export_resources": false,
          "validate_self": "candidate",
          "validate_others": "candidate",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "deleting",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "creating",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "delete_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "create_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "deallocating",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "awaiting_up",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "deallocate_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "up",
          "label": "success",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "deleted",
          "label": "info",
          "export_resources": false,
          "validate_self": null,
          "validate_others": null,
          "purge_resources": false,
          "deleted": true,
          "values": {}
        },
        {
          "name": "up_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "maintenance",
          "label": "info",
          "export_resources": false,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "update_start",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "ep_migration_start",
          "label": "info",
          "export_resources": false,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "update_rejected",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "ep_migration_deleting",
          "label": "info",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "update_warning",
          "label": "warning",
          "export_resources": true,
          "validate_self": "candidate",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "ep_migration_updating",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "update_deploying",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "ep_migration_failed",
          "label": "warning",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "update_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "rollback",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "rollback_failed",
          "label": "info",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "ordered",
          "label": "info",
          "export_resources": false,
          "validate_self": "candidate",
          "validate_others": null,
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "warning",
          "label": "warning",
          "export_resources": true,
          "validate_self": "active",
          "validate_others": "active",
          "purge_resources": false,
          "deleted": false,
          "values": {}
        },
        {
          "name": "order_rejected",
          "label": "info",
          "export_resources": false,
          "validate_self": "candidate",
          "validate_others": null,
          "purge_resources": false,
          "deleted": false,
          "values": {}
        }
      ],
      "transfers": [
        {
          "source": "ordered",
          "target": "allocating",
          "error": "order_rejected",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": true,
          "config_name": null,
          "description": "ordered to allocating (auto)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "allocating",
          "target": "creating",
          "error": "order_rejected",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": true,
          "config_name": null,
          "description": "allocating to creating (auto)",
          "target_operation": "promote",
          "error_operation": null
        },
        {
          "source": "creating",
          "target": "awaiting_up",
          "error": "create_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "creating to awaiting_up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "create_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": false,
          "config_name": "auto_delete_create_failed",
          "description": "create_failed to deleting (auto)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "create_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "create_failed to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "create_failed",
          "target": "awaiting_up",
          "error": "create_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "create_failed to awaiting_up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "awaiting_up",
          "target": "up",
          "error": "up_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "awaiting_up to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "awaiting_up",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "awaiting_up to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": false,
          "config_name": "auto_delete_up_failed",
          "description": "up_failed to deleting (auto)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up_failed to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up_failed",
          "target": "up",
          "error": "up_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up_failed to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up",
          "target": "up",
          "error": "warning",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up",
          "target": "maintenance",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up to maintenance (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "maintenance",
          "target": "ep_migration_start",
          "error": null,
          "on_update": true,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "maintenance to ep_migration_start (API PATCH)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "ep_migration_start",
          "target": "ep_migration_deleting",
          "error": "ep_migration_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": true,
          "config_name": null,
          "description": "ep_migration_start to ep_migration_deleting (auto)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "ep_migration_deleting",
          "target": "ep_migration_updating",
          "error": "ep_migration_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "ep_migration_deleting to ep_migration_updating (resource)",
          "target_operation": "promote",
          "error_operation": null
        },
        {
          "source": "ep_migration_updating",
          "target": "maintenance",
          "error": "ep_migration_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "ep_migration_updating to maintenance (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "ep_migration_failed",
          "target": "ep_migration_start",
          "error": "ep_migration_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "ep_migration_failed to ep_migration_start (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "maintenance",
          "target": "up",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "maintenance to up (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "warning",
          "target": "up",
          "error": "warning",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "warning to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "warning",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "warning to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "order_rejected",
          "target": "deallocating",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": false,
          "config_name": "auto_deallocate_order_rejected",
          "description": "order_rejected to deallocating (auto)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "order_rejected",
          "target": "deallocating",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "order_rejected to deallocating (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up",
          "target": "update_start",
          "error": null,
          "on_update": true,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up to update_start (API PATCH)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_start",
          "target": "update_deploying",
          "error": "update_rejected",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": true,
          "config_name": null,
          "description": "update_start to update_deploying (auto)",
          "target_operation": "promote",
          "error_operation": null
        },
        {
          "source": "update_deploying",
          "target": "up",
          "error": "update_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_deploying to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_rejected",
          "target": "update_rejected",
          "error": "update_rejected",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_rejected to update_rejected (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_rejected",
          "target": "up",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_rejected to up (API POST state)",
          "target_operation": "clear candidate",
          "error_operation": null
        },
        {
          "source": "update_rejected",
          "target": "up",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": false,
          "config_name": "auto_discard_update_rejected",
          "description": "update_rejected to up (auto)",
          "target_operation": "clear candidate",
          "error_operation": null
        },
        {
          "source": "update_start",
          "target": "update_start",
          "error": "update_warning",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_start to update_start (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_warning",
          "target": "update_start",
          "error": "update_warning",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_warning to update_start (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_warning",
          "target": "warning",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_warning to warning (API POST state)",
          "target_operation": "clear candidate",
          "error_operation": null
        },
        {
          "source": "update_failed",
          "target": "up",
          "error": "update_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_failed to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "update_failed",
          "target": "rollback",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": false,
          "auto": true,
          "validate": false,
          "config_name": "auto_rollback_update_failed",
          "description": "update_failed to rollback (auto)",
          "target_operation": "rollback",
          "error_operation": null
        },
        {
          "source": "update_failed",
          "target": "rollback",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "update_failed to rollback (API POST state)",
          "target_operation": "rollback",
          "error_operation": null
        },
        {
          "source": "up",
          "target": "rollback",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up to rollback (API state POST)",
          "target_operation": "rollback",
          "error_operation": null
        },
        {
          "source": "rollback",
          "target": "up",
          "error": "rollback_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "rollback to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "rollback_failed",
          "target": "up",
          "error": "rollback_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "rollback_failed to up (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "rollback_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "rollback_failed to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "rollback_failed",
          "target": "rollback",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "rollback_failed to rollback (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "up",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": true,
          "api_set_state": false,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "up to deleting (API DELETE)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "deleting",
          "target": "deallocating",
          "error": "delete_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "deleting to deallocating (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "delete_failed",
          "target": "deallocating",
          "error": "delete_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "delete_failed to deallocating (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "delete_failed",
          "target": "deleting",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "delete_failed to deleting (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "delete_failed",
          "target": "deallocating",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "delete_failed to deallocating (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "deallocating",
          "target": "deleted",
          "error": "deallocate_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "deallocating to deleted (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "deallocate_failed",
          "target": "deleted",
          "error": "deallocate_failed",
          "on_update": false,
          "on_delete": false,
          "api_set_state": false,
          "resource_based": true,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "deallocate_failed to deleted (resource)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "deallocate_failed",
          "target": "deallocating",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "deallocate_failed to deallocating (API POST state)",
          "target_operation": null,
          "error_operation": null
        },
        {
          "source": "deallocate_failed",
          "target": "deleted",
          "error": null,
          "on_update": false,
          "on_delete": false,
          "api_set_state": true,
          "resource_based": false,
          "auto": false,
          "validate": false,
          "config_name": null,
          "description": "deallocate_failed to deleted (API POST state)",
          "target_operation": null,
          "error_operation": null
        }
      ],
      "initial_state": "ordered",
      "name": "cloudconnect"
    },
    "config": {
      "auto_delete_up_failed": false,
      "auto_delete_create_failed": false,
      "auto_rollback_update_failed": true,
      "auto_discard_update_rejected": false,
      "auto_deallocate_order_rejected": false
    },
    "service_identity": null,
    "service_identity_display_name": null,
    "instance_summary": {
      "by_state": {
        "up_failed": 1,
        "delete_failed": 1,
        "warning": 4,
        "deleted": 7,
        "create_failed": 1,
        "order_rejected": 10,
        "allocating": 0,
        "deleting": 0,
        "creating": 0,
        "deallocating": 0,
        "awaiting_up": 0,
        "deallocate_failed": 0,
        "up": 0,
        "maintenance": 0,
        "update_start": 0,
        "ep_migration_start": 0,
        "update_rejected": 0,
        "ep_migration_deleting": 0,
        "update_warning": 0,
        "ep_migration_updating": 0,
        "update_deploying": 0,
        "ep_migration_failed": 0,
        "update_failed": 0,
        "rollback": 0,
        "rollback_failed": 0,
        "ordered": 0
      },
      "by_label": {
        "no_label": 0,
        "info": 20,
        "success": 0,
        "danger": 0,
        "warning": 4
      },
      "total": 24
    }
  }
}
